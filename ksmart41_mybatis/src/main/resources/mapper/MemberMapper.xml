<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ksmart41.mybatis.mapper.MemberMapper">
	<resultMap type="Member" id="memberResultMap">
		<result column="m_id" 		property="memberId"/>
		<result column="m_pw" 		property="memberPw"/>
		<result column="m_name" 	property="memberName"/>
		<result column="m_level" 	property="memberLevel"/>
		<result column="m_email" 	property="memberEmail"/>
		<result column="m_addr" 	property="memberAddr"/>
		<result column="m_reg_date" property="memberRegDate"/>
	</resultMap>
	
	<delete id="removeMemberByMemberId" parameterType="String">
		DELETE
		FROM
			tb_member
		WHERE
			m_id = #{memberId};
	</delete>
	
	<delete id="removeLoginHistory" parameterType="String">
		DELETE
		FROM 
			tb_login
		WHERE
			login_id = #{memberId};
	</delete>
	
	<delete id="removeGoodsBySellerId" parameterType="String">
		DELETE
		FROM
			tb_goods
		WHERE
			g_seller_id = #{memberId};
	</delete>
	
	<delete id="removeOrderByOrderId" parameterType="String">
		DELETE
		FROM
			tb_order
		WHERE
			o_id = #{memberId};
	</delete>
	
	<delete id="removeOrderBySellerId" parameterType="String">
		DELETE
			o
		FROM
			tb_goods as g
			INNER JOIN 
			tb_order as o
			ON
			g.g_code = o.o_g_code
		WHERE
			g.g_seller_id = #{memberId};
	</delete>
	
	<update id="modifyMemberInfo" parameterType="Member">
		UPDATE tb_member
		<trim prefix="SET" prefixOverrides=",">
			<if test="memberPw != null and memberPw != ''.toString()">			
				 m_pw		=#{memberPw}
			</if>
			<if test="memberLevel != null and memberLevel != ''.toString()">
				,m_level	=#{memberLevel}
			</if>
			<if test="memberName != null and memberName != ''.toString()">		
				,m_name		=#{memberName}
			</if>
			<if test="memberEmail != null and memberEmail != ''.toString()">
				,m_email	=#{memberEmail}
			</if>
			<if test="memberAddr != null and memberAddr != ''.toString()">
				,m_addr		=#{memberAddr}
			</if>
		</trim>
		WHERE
			m_id=#{memberId};
	</update>
	
	<select id="getMemberInfoByMemberId" parameterType="String" resultMap="memberResultMap">
		SELECT 
			 m.m_id
			,m.m_pw
			,m.m_name 
			,m.m_level
			,m.m_email
			,m.m_addr
		FROM
			tb_member AS m
		WHERE
			m.m_id = #{memberId};
	</select>
	
	<select id="getMemberByMemberId" parameterType="String" resultType="int">
		SELECT 
			COUNT(1)
		FROM
			tb_member AS m
		WHERE
			m.m_id = #{memberId};
	</select>
	
	<select id="getMemberLevelList" resultType="MemberLevel">
		SELECT 
			 l.level_num 	AS levelNum
			,l.level_name 	AS levelName
		FROM
		 	tb_member_level AS l;
	</select>
	
	<insert id="addMember" parameterType="Member">
		INSERT INTO tb_member
		(
			 m_id
			,m_pw
			,m_name
			,m_level
			,m_email
			,m_addr
			,m_reg_date
		)VALUES(
			 #{memberId}
			,#{memberPw}
			,#{memberName}
			,#{memberLevel}
			,#{memberEmail}
			,#{memberAddr}
			,CURDATE()
		);	
	</insert>
	
	<select id="getMemberListBySearchKey" parameterType="String" resultMap="memberResultMap">
		SELECT
			 m.m_id
			,m.m_pw
			,m.m_name
			,m.m_level
			,m.m_email
			,m.m_addr
			,m.m_reg_date
		FROM 
			tb_member AS m
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="searchValue != null and searchValue != ''.toString()">
				${searchKey} LIKE CONCAT('%', #{searchValue}, '%');
			</if>
		</trim>
	</select>
	<select id="getMemberList" resultMap="memberResultMap">
		SELECT
			 m.m_id
			,m.m_pw
			,m.m_name
			,m.m_level
			,m.m_email
			,m.m_addr
			,m.m_reg_date
		FROM 
			tb_member AS m;
	</select>
	<!-- 
		<select id="getMemberList" resultType="Member">
			SELECT
				 m.m_id			AS memberId
				,m.m_pw			AS memberPw
				,m.m_name		AS memberName
				,m.m_level		AS memberLevel
				,m.m_email		AS memberEmail
				,m.m_addr		AS memberAddr
				,m.m_reg_date	AS memberRegDate
			FROM 
				tb_member AS m;
		</select>
 	-->
</mapper>